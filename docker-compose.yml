# docker-compose.yml (corregido)
services:
  postgres:
    image: postgres:15
    container_name: up_study_db
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./DB/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    container_name: up_study_adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  backend:
    build:
      context: ./back/up-study-back    # <- ajusta si tu backend estÃ¡ en otra ruta
      dockerfile: Dockerfile
    container_name: upstudy-backend
    env_file:
      - ./.env
    environment:
      DB_HOST: postgres
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
    ports:
      - "3000:3000"
    depends_on:
      - postgres

volumes:
  pgdata:
